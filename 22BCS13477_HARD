import java.util.*;
import java.util.stream.*;

class Product {
    String name;
    String category;
    double price;

    Product(String name, String category, double price) {
        this.name = name;
        this.category = category;
        this.price = price;
    }

    @Override
    public String toString() {
        return "Product{name='" + name + "', category='" + category + "', price=" + price + "}";
    }
}

public class ProcessProductDataset {
    public static void main(String[] args) {
        List<Product> products = Arrays.asList(
                new Product("Laptop", "Electronics", 1000),
                new Product("Phone", "Electronics", 800),
                new Product("Shoes", "Clothing", 50),
                new Product("T-shirt", "Clothing", 20),
                new Product("Washing Machine", "Home Appliances", 300),
                new Product("Fridge", "Home Appliances", 500)
        );

        // Grouping products by category
        Map<String, List<Product>> groupedByCategory = products.stream()
                .collect(Collectors.groupingBy(p -> p.category));

        // Printing products grouped by category
        System.out.println("Products grouped by category:");
        groupedByCategory.forEach((category, productList) -> {
            System.out.println(category + ": " + productList);
        });

        // Finding the most expensive product in each category
        System.out.println("\nMost expensive product in each category:");
        groupedByCategory.forEach((category, productList) -> {
            productList.stream()
                    .max(Comparator.comparingDouble(p -> p.price))
                    .ifPresent(product -> System.out.println(category + ": " + product.name + " - $" + product.price));
        });

        // Calculating the average price of all products
        double averagePrice = products.stream()
                .mapToDouble(p -> p.price)
                .average()
                .orElse(0.0);
        System.out.println("\nAverage price of all products: $" + averagePrice);
    }
}
